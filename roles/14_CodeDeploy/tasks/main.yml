#- debug:
#    msg: "{{ item }}"
#  with_dict: "{{codedeploy_metadata}}"

- name: "Create IAM Role For CodeDeploy"
  iam_role:
    name: "{{default_platform}}-codedeploy-{{item.value.name}}"
    region: "{{ default_region }}"
    assume_role_policy_document: "{{ lookup( 'file', 'template/code_deploy_role.json') }}"
    managed_policy: "{{ item.value.managed_polices}}"
  with_dict: "{{codedeploy_metadata.iam_role}}"
  register: create_iam_role

- name: "Gathering IAM Role Information"
  set_fact:
    iam_roles: "{{ iam_roles | default({}) |
  combine({ item.item.key: item })
  }}"
  loop: "{{ create_iam_role.results }}"

- name: "Create CodeDeploy Application"
  codedeploy:
    name: "{{default_prefix|lower}}{{ REGIONS[default_region] | lower }}-{{ default_account_alias|lower}}-{{default_platform|lower}}-{{item.name}}{{item.num}}"
    region: "{{default_region}}"
    state: present
  loop: "{{codedeploy_metadata.application}}"
  ignore_errors: yes


- name: "Create CodeDeploy Deploy Group"
  codedeploy_deployment:
    name: "{{default_prefix|lower}}{{ REGIONS[default_region] | lower }}-{{ default_account_alias|lower}}-{{default_platform|lower}}-{{item.deployment_group.name}}{{item.deployment_group.num}}"
    applicationName: "{{default_prefix|lower}}{{ REGIONS[default_region] | lower }}-{{ default_account_alias|lower}}-{{default_platform|lower}}-{{item.name}}{{item.num}}"
    configName: CodeDeployDefault.AllAtOnce
    autoScalingGroups:
      - "{{item.deployment_group.asg_group}}"
    serviceRoleArn: "{{iam_roles[item.deployment_group.iam_name].arn}}"
    targetGroupInfoList:
      - name: "{{target_groups.was_alb.http.target_group_name }}"
    deploymentStyle:
      deploymentType: IN_PLACE
      deploymentOption: WITH_TRAFFIC_CONTROL
    region: "{{default_region}}"
    state: present
  loop: "{{codedeploy_metadata.application}}"
